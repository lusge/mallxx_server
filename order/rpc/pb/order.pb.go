// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: order/rpc/order.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompanyAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	AddressName   string `protobuf:"bytes,2,opt,name=address_name,json=addressName,proto3" json:"address_name"`
	SendStatus    int32  `protobuf:"varint,3,opt,name=send_status,json=sendStatus,proto3" json:"send_status"`
	ReceiveStatus int32  `protobuf:"varint,4,opt,name=receive_status,json=receiveStatus,proto3" json:"receive_status"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Phone         string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone"`
	Province      string `protobuf:"bytes,7,opt,name=province,proto3" json:"province"`
	City          string `protobuf:"bytes,8,opt,name=city,proto3" json:"city"`
	Region        string `protobuf:"bytes,9,opt,name=region,proto3" json:"region"`
	DetailAddress string `protobuf:"bytes,10,opt,name=detail_address,json=detailAddress,proto3" json:"detail_address"`
}

func (x *CompanyAddress) Reset() {
	*x = CompanyAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyAddress) ProtoMessage() {}

func (x *CompanyAddress) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyAddress.ProtoReflect.Descriptor instead.
func (*CompanyAddress) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{0}
}

func (x *CompanyAddress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CompanyAddress) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *CompanyAddress) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *CompanyAddress) GetReceiveStatus() int32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

func (x *CompanyAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyAddress) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CompanyAddress) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CompanyAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CompanyAddress) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CompanyAddress) GetDetailAddress() string {
	if x != nil {
		return x.DetailAddress
	}
	return ""
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	MemberId              int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	CouponId              int64   `protobuf:"varint,3,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	OrderSn               string  `protobuf:"bytes,4,opt,name=order_sn,json=orderSn,proto3" json:"order_sn"`
	CreateTime            string  `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	MemberUsername        string  `protobuf:"bytes,6,opt,name=member_username,json=memberUsername,proto3" json:"member_username"`
	TotalAmount           float64 `protobuf:"fixed64,7,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`
	PayAmount             float64 `protobuf:"fixed64,8,opt,name=pay_amount,json=payAmount,proto3" json:"pay_amount"`
	FreightAmount         float64 `protobuf:"fixed64,9,opt,name=freight_amount,json=freightAmount,proto3" json:"freight_amount"`
	PromotionAmount       float64 `protobuf:"fixed64,10,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount"`
	IntegrationAmount     float64 `protobuf:"fixed64,11,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount"`
	CouponAmount          float64 `protobuf:"fixed64,12,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount"`
	DiscountAmount        float64 `protobuf:"fixed64,13,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`
	PayType               int32   `protobuf:"varint,14,opt,name=pay_type,json=payType,proto3" json:"pay_type"`
	SourceType            int32   `protobuf:"varint,15,opt,name=source_type,json=sourceType,proto3" json:"source_type"`
	Status                int32   `protobuf:"varint,16,opt,name=status,proto3" json:"status"`
	OrderType             int32   `protobuf:"varint,17,opt,name=order_type,json=orderType,proto3" json:"order_type"`
	DeliveryCompany       string  `protobuf:"bytes,18,opt,name=delivery_company,json=deliveryCompany,proto3" json:"delivery_company"`
	DeliverySn            string  `protobuf:"bytes,19,opt,name=delivery_sn,json=deliverySn,proto3" json:"delivery_sn"`
	AutoConfirmDay        int32   `protobuf:"varint,20,opt,name=auto_confirm_day,json=autoConfirmDay,proto3" json:"auto_confirm_day"`
	Integration           int32   `protobuf:"varint,21,opt,name=integration,proto3" json:"integration"`
	Growth                int32   `protobuf:"varint,22,opt,name=growth,proto3" json:"growth"`
	PromotionInfo         string  `protobuf:"bytes,23,opt,name=promotion_info,json=promotionInfo,proto3" json:"promotion_info"`
	BillType              int32   `protobuf:"varint,24,opt,name=bill_type,json=billType,proto3" json:"bill_type"`
	BillHeader            string  `protobuf:"bytes,25,opt,name=bill_header,json=billHeader,proto3" json:"bill_header"`
	BillContent           string  `protobuf:"bytes,26,opt,name=bill_content,json=billContent,proto3" json:"bill_content"`
	BillReceiverPhone     string  `protobuf:"bytes,27,opt,name=bill_receiver_phone,json=billReceiverPhone,proto3" json:"bill_receiver_phone"`
	BillReceiverEmail     string  `protobuf:"bytes,28,opt,name=bill_receiver_email,json=billReceiverEmail,proto3" json:"bill_receiver_email"`
	ReceiverName          string  `protobuf:"bytes,29,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name"`
	ReceiverPhone         string  `protobuf:"bytes,30,opt,name=receiver_phone,json=receiverPhone,proto3" json:"receiver_phone"`
	ReceiverPostCode      string  `protobuf:"bytes,31,opt,name=receiver_post_code,json=receiverPostCode,proto3" json:"receiver_post_code"`
	ReceiverProvince      string  `protobuf:"bytes,32,opt,name=receiver_province,json=receiverProvince,proto3" json:"receiver_province"`
	ReceiverCity          string  `protobuf:"bytes,33,opt,name=receiver_city,json=receiverCity,proto3" json:"receiver_city"`
	ReceiverRegion        string  `protobuf:"bytes,34,opt,name=receiver_region,json=receiverRegion,proto3" json:"receiver_region"`
	ReceiverDetailAddress string  `protobuf:"bytes,35,opt,name=receiver_detail_address,json=receiverDetailAddress,proto3" json:"receiver_detail_address"`
	Note                  string  `protobuf:"bytes,36,opt,name=note,proto3" json:"note"`
	ConfirmStatus         int32   `protobuf:"varint,37,opt,name=confirm_status,json=confirmStatus,proto3" json:"confirm_status"`
	DeleteStatus          int32   `protobuf:"varint,38,opt,name=delete_status,json=deleteStatus,proto3" json:"delete_status"`
	UseIntegration        int32   `protobuf:"varint,39,opt,name=use_integration,json=useIntegration,proto3" json:"use_integration"`
	PaymentTime           string  `protobuf:"bytes,40,opt,name=payment_time,json=paymentTime,proto3" json:"payment_time"`
	DeliveryTime          string  `protobuf:"bytes,41,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time"`
	ReceiveTime           string  `protobuf:"bytes,42,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time"`
	CommentTime           string  `protobuf:"bytes,43,opt,name=comment_time,json=commentTime,proto3" json:"comment_time"`
	ModifyTime            string  `protobuf:"bytes,44,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{1}
}

func (x *Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Order) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *Order) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *Order) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Order) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *Order) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *Order) GetPayAmount() float64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *Order) GetFreightAmount() float64 {
	if x != nil {
		return x.FreightAmount
	}
	return 0
}

func (x *Order) GetPromotionAmount() float64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *Order) GetIntegrationAmount() float64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *Order) GetCouponAmount() float64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *Order) GetDiscountAmount() float64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *Order) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *Order) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *Order) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Order) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *Order) GetDeliveryCompany() string {
	if x != nil {
		return x.DeliveryCompany
	}
	return ""
}

func (x *Order) GetDeliverySn() string {
	if x != nil {
		return x.DeliverySn
	}
	return ""
}

func (x *Order) GetAutoConfirmDay() int32 {
	if x != nil {
		return x.AutoConfirmDay
	}
	return 0
}

func (x *Order) GetIntegration() int32 {
	if x != nil {
		return x.Integration
	}
	return 0
}

func (x *Order) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *Order) GetPromotionInfo() string {
	if x != nil {
		return x.PromotionInfo
	}
	return ""
}

func (x *Order) GetBillType() int32 {
	if x != nil {
		return x.BillType
	}
	return 0
}

func (x *Order) GetBillHeader() string {
	if x != nil {
		return x.BillHeader
	}
	return ""
}

func (x *Order) GetBillContent() string {
	if x != nil {
		return x.BillContent
	}
	return ""
}

func (x *Order) GetBillReceiverPhone() string {
	if x != nil {
		return x.BillReceiverPhone
	}
	return ""
}

func (x *Order) GetBillReceiverEmail() string {
	if x != nil {
		return x.BillReceiverEmail
	}
	return ""
}

func (x *Order) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *Order) GetReceiverPhone() string {
	if x != nil {
		return x.ReceiverPhone
	}
	return ""
}

func (x *Order) GetReceiverPostCode() string {
	if x != nil {
		return x.ReceiverPostCode
	}
	return ""
}

func (x *Order) GetReceiverProvince() string {
	if x != nil {
		return x.ReceiverProvince
	}
	return ""
}

func (x *Order) GetReceiverCity() string {
	if x != nil {
		return x.ReceiverCity
	}
	return ""
}

func (x *Order) GetReceiverRegion() string {
	if x != nil {
		return x.ReceiverRegion
	}
	return ""
}

func (x *Order) GetReceiverDetailAddress() string {
	if x != nil {
		return x.ReceiverDetailAddress
	}
	return ""
}

func (x *Order) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Order) GetConfirmStatus() int32 {
	if x != nil {
		return x.ConfirmStatus
	}
	return 0
}

func (x *Order) GetDeleteStatus() int32 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *Order) GetUseIntegration() int32 {
	if x != nil {
		return x.UseIntegration
	}
	return 0
}

func (x *Order) GetPaymentTime() string {
	if x != nil {
		return x.PaymentTime
	}
	return ""
}

func (x *Order) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *Order) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *Order) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *Order) GetModifyTime() string {
	if x != nil {
		return x.ModifyTime
	}
	return ""
}

type OrderFirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId   int64   `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id"`
	SkuId       int64   `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	ProductPic  string  `protobuf:"bytes,3,opt,name=product_pic,json=productPic,proto3" json:"product_pic"`
	ProductName string  `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name"`
	Quantity    int32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity"`
	Attr        string  `protobuf:"bytes,6,opt,name=attr,proto3" json:"attr"`
	Price       float64 `protobuf:"fixed64,7,opt,name=price,proto3" json:"price"`
	//优惠了多少钱
	DiscountPrice float64 `protobuf:"fixed64,8,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price"`
	//优惠说明
	DiscountNote string `protobuf:"bytes,9,opt,name=discount_note,json=discountNote,proto3" json:"discount_note"`
}

func (x *OrderFirm) Reset() {
	*x = OrderFirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFirm) ProtoMessage() {}

func (x *OrderFirm) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFirm.ProtoReflect.Descriptor instead.
func (*OrderFirm) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{2}
}

func (x *OrderFirm) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderFirm) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *OrderFirm) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *OrderFirm) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderFirm) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderFirm) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

func (x *OrderFirm) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderFirm) GetDiscountPrice() float64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *OrderFirm) GetDiscountNote() string {
	if x != nil {
		return x.DiscountNote
	}
	return ""
}

type OrderFirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	ProductId int64   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id"`
	SkuId     int64   `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Quantity  int32   `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity"`
	CartIds   []int64 `protobuf:"varint,5,rep,packed,name=cart_ids,json=cartIds,proto3" json:"cart_ids"`
}

func (x *OrderFirmRequest) Reset() {
	*x = OrderFirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFirmRequest) ProtoMessage() {}

func (x *OrderFirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFirmRequest.ProtoReflect.Descriptor instead.
func (*OrderFirmRequest) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{3}
}

func (x *OrderFirmRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderFirmRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderFirmRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *OrderFirmRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderFirmRequest) GetCartIds() []int64 {
	if x != nil {
		return x.CartIds
	}
	return nil
}

type OrderFirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Detail string       `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail"`
	Data   []*OrderFirm `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *OrderFirmResponse) Reset() {
	*x = OrderFirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFirmResponse) ProtoMessage() {}

func (x *OrderFirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFirmResponse.ProtoReflect.Descriptor instead.
func (*OrderFirmResponse) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{4}
}

func (x *OrderFirmResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderFirmResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *OrderFirmResponse) GetData() []*OrderFirm {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
}

func (x *OrderInfoRequest) Reset() {
	*x = OrderInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfoRequest) ProtoMessage() {}

func (x *OrderInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfoRequest.ProtoReflect.Descriptor instead.
func (*OrderInfoRequest) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{5}
}

func (x *OrderInfoRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

//单订单
type OrderInfoRsponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail"`
	Data   *Order `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *OrderInfoRsponse) Reset() {
	*x = OrderInfoRsponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfoRsponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfoRsponse) ProtoMessage() {}

func (x *OrderInfoRsponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfoRsponse.ProtoReflect.Descriptor instead.
func (*OrderInfoRsponse) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{6}
}

func (x *OrderInfoRsponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderInfoRsponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *OrderInfoRsponse) GetData() *Order {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
}

func (x *OrderListRequest) Reset() {
	*x = OrderListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListRequest) ProtoMessage() {}

func (x *OrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListRequest.ProtoReflect.Descriptor instead.
func (*OrderListRequest) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{7}
}

func (x *OrderListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *OrderListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

//订单列表
type OrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Detail string   `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail"`
	Data   []*Order `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *OrderListResponse) Reset() {
	*x = OrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListResponse) ProtoMessage() {}

func (x *OrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListResponse.ProtoReflect.Descriptor instead.
func (*OrderListResponse) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{8}
}

func (x *OrderListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderListResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *OrderListResponse) GetData() []*Order {
	if x != nil {
		return x.Data
	}
	return nil
}

//生成订单请求信息
type GenerateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId  int64   `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id"`
	CouponId   int64   `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`     //使用优惠券ID
	IsIntegral bool    `protobuf:"varint,3,opt,name=isIntegral,proto3" json:"isIntegral"`                 //是否使用优惠券
	PayMethod  int32   `protobuf:"varint,4,opt,name=payMethod,proto3" json:"payMethod"`                   //支付方式
	CartIds    []int64 `protobuf:"varint,5,rep,packed,name=cart_ids,json=cartIds,proto3" json:"cart_ids"` //购物车中的Id
}

func (x *GenerateOrderRequest) Reset() {
	*x = GenerateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOrderRequest) ProtoMessage() {}

func (x *GenerateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOrderRequest.ProtoReflect.Descriptor instead.
func (*GenerateOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateOrderRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *GenerateOrderRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *GenerateOrderRequest) GetIsIntegral() bool {
	if x != nil {
		return x.IsIntegral
	}
	return false
}

func (x *GenerateOrderRequest) GetPayMethod() int32 {
	if x != nil {
		return x.PayMethod
	}
	return 0
}

func (x *GenerateOrderRequest) GetCartIds() []int64 {
	if x != nil {
		return x.CartIds
	}
	return nil
}

//订单返回信息
type GenerateOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId int64        `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id"`
	Firm      []*OrderFirm `protobuf:"bytes,2,rep,name=firm,proto3" json:"firm"` //选择的都买的商品
	Item      *Order       `protobuf:"bytes,4,opt,name=item,proto3" json:"item"` //订单内容,包含需要支付的总价格
	Code      int32        `protobuf:"varint,5,opt,name=code,proto3" json:"code"`
	Detail    string       `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail"`
}

func (x *GenerateOrderResponse) Reset() {
	*x = GenerateOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOrderResponse) ProtoMessage() {}

func (x *GenerateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOrderResponse.ProtoReflect.Descriptor instead.
func (*GenerateOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{10}
}

func (x *GenerateOrderResponse) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *GenerateOrderResponse) GetFirm() []*OrderFirm {
	if x != nil {
		return x.Firm
	}
	return nil
}

func (x *GenerateOrderResponse) GetItem() *Order {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GenerateOrderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GenerateOrderResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type OrderOperateHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId     int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	OperateMan  string `protobuf:"bytes,3,opt,name=operate_man,json=operateMan,proto3" json:"operate_man"`
	CreateTime  string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	OrderStatus int32  `protobuf:"varint,5,opt,name=order_status,json=orderStatus,proto3" json:"order_status"`
	Note        string `protobuf:"bytes,6,opt,name=note,proto3" json:"note"`
}

func (x *OrderOperateHistory) Reset() {
	*x = OrderOperateHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOperateHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOperateHistory) ProtoMessage() {}

func (x *OrderOperateHistory) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOperateHistory.ProtoReflect.Descriptor instead.
func (*OrderOperateHistory) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{11}
}

func (x *OrderOperateHistory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderOperateHistory) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderOperateHistory) GetOperateMan() string {
	if x != nil {
		return x.OperateMan
	}
	return ""
}

func (x *OrderOperateHistory) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderOperateHistory) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *OrderOperateHistory) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type OrderProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId           int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	OrderSn           string  `protobuf:"bytes,3,opt,name=order_sn,json=orderSn,proto3" json:"order_sn"`
	ProductId         int64   `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id"`
	ProductPic        string  `protobuf:"bytes,5,opt,name=product_pic,json=productPic,proto3" json:"product_pic"`
	ProductName       string  `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name"`
	ProductBrand      string  `protobuf:"bytes,7,opt,name=product_brand,json=productBrand,proto3" json:"product_brand"`
	ProductSn         string  `protobuf:"bytes,8,opt,name=product_sn,json=productSn,proto3" json:"product_sn"`
	ProductPrice      float64 `protobuf:"fixed64,9,opt,name=product_price,json=productPrice,proto3" json:"product_price"`
	ProductQuantity   int32   `protobuf:"varint,10,opt,name=product_quantity,json=productQuantity,proto3" json:"product_quantity"`
	ProductSkuId      int64   `protobuf:"varint,11,opt,name=product_sku_id,json=productSkuId,proto3" json:"product_sku_id"`
	ProductSkuCode    string  `protobuf:"bytes,12,opt,name=product_sku_code,json=productSkuCode,proto3" json:"product_sku_code"`
	ProductCategoryId int64   `protobuf:"varint,13,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id"`
	PromotionName     string  `protobuf:"bytes,14,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name"`
	PromotionAmount   float64 `protobuf:"fixed64,15,opt,name=promotion_amount,json=promotionAmount,proto3" json:"promotion_amount"`
	CouponAmount      float64 `protobuf:"fixed64,16,opt,name=coupon_amount,json=couponAmount,proto3" json:"coupon_amount"`
	IntegrationAmount float64 `protobuf:"fixed64,17,opt,name=integration_amount,json=integrationAmount,proto3" json:"integration_amount"`
	RealAmount        float64 `protobuf:"fixed64,18,opt,name=real_amount,json=realAmount,proto3" json:"real_amount"`
	GiftIntegration   int32   `protobuf:"varint,19,opt,name=gift_integration,json=giftIntegration,proto3" json:"gift_integration"`
	GiftGrowth        int32   `protobuf:"varint,20,opt,name=gift_growth,json=giftGrowth,proto3" json:"gift_growth"`
	ProductAttr       string  `protobuf:"bytes,21,opt,name=product_attr,json=productAttr,proto3" json:"product_attr"`
}

func (x *OrderProduct) Reset() {
	*x = OrderProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProduct) ProtoMessage() {}

func (x *OrderProduct) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProduct.ProtoReflect.Descriptor instead.
func (*OrderProduct) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{12}
}

func (x *OrderProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderProduct) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderProduct) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderProduct) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderProduct) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *OrderProduct) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderProduct) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *OrderProduct) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *OrderProduct) GetProductPrice() float64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *OrderProduct) GetProductQuantity() int32 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

func (x *OrderProduct) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *OrderProduct) GetProductSkuCode() string {
	if x != nil {
		return x.ProductSkuCode
	}
	return ""
}

func (x *OrderProduct) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *OrderProduct) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *OrderProduct) GetPromotionAmount() float64 {
	if x != nil {
		return x.PromotionAmount
	}
	return 0
}

func (x *OrderProduct) GetCouponAmount() float64 {
	if x != nil {
		return x.CouponAmount
	}
	return 0
}

func (x *OrderProduct) GetIntegrationAmount() float64 {
	if x != nil {
		return x.IntegrationAmount
	}
	return 0
}

func (x *OrderProduct) GetRealAmount() float64 {
	if x != nil {
		return x.RealAmount
	}
	return 0
}

func (x *OrderProduct) GetGiftIntegration() int32 {
	if x != nil {
		return x.GiftIntegration
	}
	return 0
}

func (x *OrderProduct) GetGiftGrowth() int32 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *OrderProduct) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

//退款
type OrderReturnApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId          int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	CompanyAddressId int64   `protobuf:"varint,3,opt,name=company_address_id,json=companyAddressId,proto3" json:"company_address_id"`
	ProductId        int64   `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id"`
	OrderSn          string  `protobuf:"bytes,5,opt,name=order_sn,json=orderSn,proto3" json:"order_sn"`
	CreateTime       string  `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	MemberUsername   string  `protobuf:"bytes,7,opt,name=member_username,json=memberUsername,proto3" json:"member_username"`
	ReturnAmount     float64 `protobuf:"fixed64,8,opt,name=return_amount,json=returnAmount,proto3" json:"return_amount"`
	ReturnName       string  `protobuf:"bytes,9,opt,name=return_name,json=returnName,proto3" json:"return_name"`
	ReturnPhone      string  `protobuf:"bytes,10,opt,name=return_phone,json=returnPhone,proto3" json:"return_phone"`
	Status           int32   `protobuf:"varint,11,opt,name=status,proto3" json:"status"`
	HandleTime       string  `protobuf:"bytes,12,opt,name=handle_time,json=handleTime,proto3" json:"handle_time"`
	ProductPic       string  `protobuf:"bytes,13,opt,name=product_pic,json=productPic,proto3" json:"product_pic"`
	ProductName      string  `protobuf:"bytes,14,opt,name=product_name,json=productName,proto3" json:"product_name"`
	ProductBrand     string  `protobuf:"bytes,15,opt,name=product_brand,json=productBrand,proto3" json:"product_brand"`
	ProductAttr      string  `protobuf:"bytes,16,opt,name=product_attr,json=productAttr,proto3" json:"product_attr"`
	ProductCount     int32   `protobuf:"varint,17,opt,name=product_count,json=productCount,proto3" json:"product_count"`
	ProductPrice     float64 `protobuf:"fixed64,18,opt,name=product_price,json=productPrice,proto3" json:"product_price"`
	ProductRealPrice float64 `protobuf:"fixed64,19,opt,name=product_real_price,json=productRealPrice,proto3" json:"product_real_price"`
	Reason           string  `protobuf:"bytes,20,opt,name=reason,proto3" json:"reason"`
	Description      string  `protobuf:"bytes,21,opt,name=description,proto3" json:"description"`
	ProofPics        string  `protobuf:"bytes,22,opt,name=proof_pics,json=proofPics,proto3" json:"proof_pics"`
	HandleNote       string  `protobuf:"bytes,23,opt,name=handle_note,json=handleNote,proto3" json:"handle_note"`
	HandleMan        string  `protobuf:"bytes,24,opt,name=handle_man,json=handleMan,proto3" json:"handle_man"`
	ReceiveMan       string  `protobuf:"bytes,25,opt,name=receive_man,json=receiveMan,proto3" json:"receive_man"`
	ReceiveTime      string  `protobuf:"bytes,26,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time"`
	ReceiveNote      string  `protobuf:"bytes,27,opt,name=receive_note,json=receiveNote,proto3" json:"receive_note"`
}

func (x *OrderReturnApply) Reset() {
	*x = OrderReturnApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnApply) ProtoMessage() {}

func (x *OrderReturnApply) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnApply.ProtoReflect.Descriptor instead.
func (*OrderReturnApply) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{13}
}

func (x *OrderReturnApply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnApply) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderReturnApply) GetCompanyAddressId() int64 {
	if x != nil {
		return x.CompanyAddressId
	}
	return 0
}

func (x *OrderReturnApply) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *OrderReturnApply) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderReturnApply) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderReturnApply) GetMemberUsername() string {
	if x != nil {
		return x.MemberUsername
	}
	return ""
}

func (x *OrderReturnApply) GetReturnAmount() float64 {
	if x != nil {
		return x.ReturnAmount
	}
	return 0
}

func (x *OrderReturnApply) GetReturnName() string {
	if x != nil {
		return x.ReturnName
	}
	return ""
}

func (x *OrderReturnApply) GetReturnPhone() string {
	if x != nil {
		return x.ReturnPhone
	}
	return ""
}

func (x *OrderReturnApply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderReturnApply) GetHandleTime() string {
	if x != nil {
		return x.HandleTime
	}
	return ""
}

func (x *OrderReturnApply) GetProductPic() string {
	if x != nil {
		return x.ProductPic
	}
	return ""
}

func (x *OrderReturnApply) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *OrderReturnApply) GetProductBrand() string {
	if x != nil {
		return x.ProductBrand
	}
	return ""
}

func (x *OrderReturnApply) GetProductAttr() string {
	if x != nil {
		return x.ProductAttr
	}
	return ""
}

func (x *OrderReturnApply) GetProductCount() int32 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *OrderReturnApply) GetProductPrice() float64 {
	if x != nil {
		return x.ProductPrice
	}
	return 0
}

func (x *OrderReturnApply) GetProductRealPrice() float64 {
	if x != nil {
		return x.ProductRealPrice
	}
	return 0
}

func (x *OrderReturnApply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OrderReturnApply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderReturnApply) GetProofPics() string {
	if x != nil {
		return x.ProofPics
	}
	return ""
}

func (x *OrderReturnApply) GetHandleNote() string {
	if x != nil {
		return x.HandleNote
	}
	return ""
}

func (x *OrderReturnApply) GetHandleMan() string {
	if x != nil {
		return x.HandleMan
	}
	return ""
}

func (x *OrderReturnApply) GetReceiveMan() string {
	if x != nil {
		return x.ReceiveMan
	}
	return ""
}

func (x *OrderReturnApply) GetReceiveTime() string {
	if x != nil {
		return x.ReceiveTime
	}
	return ""
}

func (x *OrderReturnApply) GetReceiveNote() string {
	if x != nil {
		return x.ReceiveNote
	}
	return ""
}

type OrderReturnReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Sort       int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort"`
	Status     int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status"`
	CreateTime string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time"`
}

func (x *OrderReturnReason) Reset() {
	*x = OrderReturnReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReturnReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReturnReason) ProtoMessage() {}

func (x *OrderReturnReason) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReturnReason.ProtoReflect.Descriptor instead.
func (*OrderReturnReason) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{14}
}

func (x *OrderReturnReason) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderReturnReason) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderReturnReason) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *OrderReturnReason) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OrderReturnReason) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type OrderMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	Type     int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	PageNum  int32 `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num"`
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
}

func (x *OrderMemberRequest) Reset() {
	*x = OrderMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderMemberRequest) ProtoMessage() {}

func (x *OrderMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderMemberRequest.ProtoReflect.Descriptor instead.
func (*OrderMemberRequest) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{15}
}

func (x *OrderMemberRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderMemberRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OrderMemberRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *OrderMemberRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_rpc_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_rpc_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_order_rpc_order_proto_rawDescGZIP(), []int{16}
}

func (x *OrderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

var File_order_rpc_order_proto protoreflect.FileDescriptor

var file_order_rpc_order_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xa4, 0x02, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xb7, 0x0c, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x79, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x44, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74,
	0x68, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6c, 0x6c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x02, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69,
	0x63, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x74, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x11,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2d, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x5d, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e,
	0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5e,
	0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xab,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0xa4, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69,
	0x72, 0x6d, 0x52, 0x04, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22,
	0x81, 0x06, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73,
	0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x22, 0x95, 0x07, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x70,
	0x69, 0x63, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x50, 0x69, 0x63, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f,
	0x6d, 0x61, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x6d, 0x61, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x11,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x32, 0xf9,
	0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x72, 0x69, 0x6d, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x72,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_rpc_order_proto_rawDescOnce sync.Once
	file_order_rpc_order_proto_rawDescData = file_order_rpc_order_proto_rawDesc
)

func file_order_rpc_order_proto_rawDescGZIP() []byte {
	file_order_rpc_order_proto_rawDescOnce.Do(func() {
		file_order_rpc_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_rpc_order_proto_rawDescData)
	})
	return file_order_rpc_order_proto_rawDescData
}

var file_order_rpc_order_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_order_rpc_order_proto_goTypes = []interface{}{
	(*CompanyAddress)(nil),        // 0: pb.CompanyAddress
	(*Order)(nil),                 // 1: pb.Order
	(*OrderFirm)(nil),             // 2: pb.OrderFirm
	(*OrderFirmRequest)(nil),      // 3: pb.OrderFirmRequest
	(*OrderFirmResponse)(nil),     // 4: pb.OrderFirmResponse
	(*OrderInfoRequest)(nil),      // 5: pb.OrderInfoRequest
	(*OrderInfoRsponse)(nil),      // 6: pb.OrderInfoRsponse
	(*OrderListRequest)(nil),      // 7: pb.OrderListRequest
	(*OrderListResponse)(nil),     // 8: pb.OrderListResponse
	(*GenerateOrderRequest)(nil),  // 9: pb.GenerateOrderRequest
	(*GenerateOrderResponse)(nil), // 10: pb.GenerateOrderResponse
	(*OrderOperateHistory)(nil),   // 11: pb.OrderOperateHistory
	(*OrderProduct)(nil),          // 12: pb.OrderProduct
	(*OrderReturnApply)(nil),      // 13: pb.OrderReturnApply
	(*OrderReturnReason)(nil),     // 14: pb.OrderReturnReason
	(*OrderMemberRequest)(nil),    // 15: pb.OrderMemberRequest
	(*OrderResponse)(nil),         // 16: pb.OrderResponse
}
var file_order_rpc_order_proto_depIdxs = []int32{
	2,  // 0: pb.OrderFirmResponse.data:type_name -> pb.OrderFirm
	1,  // 1: pb.OrderInfoRsponse.data:type_name -> pb.Order
	1,  // 2: pb.OrderListResponse.data:type_name -> pb.Order
	2,  // 3: pb.GenerateOrderResponse.firm:type_name -> pb.OrderFirm
	1,  // 4: pb.GenerateOrderResponse.item:type_name -> pb.Order
	3,  // 5: pb.Orderservice.OrderFrim:input_type -> pb.OrderFirmRequest
	9,  // 6: pb.Orderservice.OrderGenerate:input_type -> pb.GenerateOrderRequest
	15, // 7: pb.Orderservice.OrderMemberList:input_type -> pb.OrderMemberRequest
	5,  // 8: pb.Orderservice.OrderInfo:input_type -> pb.OrderInfoRequest
	5,  // 9: pb.Orderservice.OrderCancel:input_type -> pb.OrderInfoRequest
	5,  // 10: pb.Orderservice.OrderDelete:input_type -> pb.OrderInfoRequest
	4,  // 11: pb.Orderservice.OrderFrim:output_type -> pb.OrderFirmResponse
	10, // 12: pb.Orderservice.OrderGenerate:output_type -> pb.GenerateOrderResponse
	8,  // 13: pb.Orderservice.OrderMemberList:output_type -> pb.OrderListResponse
	6,  // 14: pb.Orderservice.OrderInfo:output_type -> pb.OrderInfoRsponse
	16, // 15: pb.Orderservice.OrderCancel:output_type -> pb.OrderResponse
	16, // 16: pb.Orderservice.OrderDelete:output_type -> pb.OrderResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_order_rpc_order_proto_init() }
func file_order_rpc_order_proto_init() {
	if File_order_rpc_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_rpc_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfoRsponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOperateHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReturnReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_rpc_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_rpc_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_rpc_order_proto_goTypes,
		DependencyIndexes: file_order_rpc_order_proto_depIdxs,
		MessageInfos:      file_order_rpc_order_proto_msgTypes,
	}.Build()
	File_order_rpc_order_proto = out.File
	file_order_rpc_order_proto_rawDesc = nil
	file_order_rpc_order_proto_goTypes = nil
	file_order_rpc_order_proto_depIdxs = nil
}
