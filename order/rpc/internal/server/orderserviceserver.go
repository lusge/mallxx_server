// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package server

import (
	"context"

	"mallxx_server/order/rpc/internal/logic"
	"mallxx_server/order/rpc/internal/svc"
	"mallxx_server/order/rpc/pb"
)

type OrderserviceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOrderserviceServer
}

func NewOrderserviceServer(svcCtx *svc.ServiceContext) *OrderserviceServer {
	return &OrderserviceServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderserviceServer) OrderFrim(ctx context.Context, in *pb.OrderFirmRequest) (*pb.OrderFirmResponse, error) {
	l := logic.NewOrderFrimLogic(ctx, s.svcCtx)
	return l.OrderFrim(in)
}

func (s *OrderserviceServer) OrderGenerate(ctx context.Context, in *pb.GenerateOrderRequest) (*pb.GenerateOrderResponse, error) {
	l := logic.NewOrderGenerateLogic(ctx, s.svcCtx)
	return l.OrderGenerate(in)
}

func (s *OrderserviceServer) OrderMemberList(ctx context.Context, in *pb.OrderMemberRequest) (*pb.OrderListResponse, error) {
	l := logic.NewOrderMemberListLogic(ctx, s.svcCtx)
	return l.OrderMemberList(in)
}

func (s *OrderserviceServer) OrderInfo(ctx context.Context, in *pb.OrderInfoRequest) (*pb.OrderInfoRsponse, error) {
	l := logic.NewOrderInfoLogic(ctx, s.svcCtx)
	return l.OrderInfo(in)
}

func (s *OrderserviceServer) OrderCancel(ctx context.Context, in *pb.OrderInfoRequest) (*pb.OrderResponse, error) {
	l := logic.NewOrderCancelLogic(ctx, s.svcCtx)
	return l.OrderCancel(in)
}

func (s *OrderserviceServer) OrderDelete(ctx context.Context, in *pb.OrderInfoRequest) (*pb.OrderResponse, error) {
	l := logic.NewOrderDeleteLogic(ctx, s.svcCtx)
	return l.OrderDelete(in)
}
