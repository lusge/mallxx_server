// Code generated by goctl. DO NOT EDIT!
// Source: admin.proto

package adminservice

import (
	"context"

	"mallxx_server/admin/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AdminInfo         = pb.AdminInfo
	AdminInfoResponse = pb.AdminInfoResponse
	AdminTokenRequest = pb.AdminTokenRequest
	EmptyRequest      = pb.EmptyRequest
	Response          = pb.Response

	AdminService interface {
		Login(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*AdminInfoResponse, error)
		GetInfo(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*AdminInfoResponse, error)
		Create(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*AdminInfoResponse, error)
		Update(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*Response, error)
		Delete(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*Response, error)
		VerifyToken(ctx context.Context, in *AdminTokenRequest, opts ...grpc.CallOption) (*Response, error)
		CleanToken(ctx context.Context, in *AdminTokenRequest, opts ...grpc.CallOption) (*Response, error)
	}

	defaultAdminService struct {
		cli zrpc.Client
	}
)

func NewAdminService(cli zrpc.Client) AdminService {
	return &defaultAdminService{
		cli: cli,
	}
}

func (m *defaultAdminService) Login(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*AdminInfoResponse, error) {
	client := pb.NewAdminServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultAdminService) GetInfo(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*AdminInfoResponse, error) {
	client := pb.NewAdminServiceClient(m.cli.Conn())
	return client.GetInfo(ctx, in, opts...)
}

func (m *defaultAdminService) Create(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*AdminInfoResponse, error) {
	client := pb.NewAdminServiceClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultAdminService) Update(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewAdminServiceClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultAdminService) Delete(ctx context.Context, in *AdminInfo, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewAdminServiceClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

func (m *defaultAdminService) VerifyToken(ctx context.Context, in *AdminTokenRequest, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewAdminServiceClient(m.cli.Conn())
	return client.VerifyToken(ctx, in, opts...)
}

func (m *defaultAdminService) CleanToken(ctx context.Context, in *AdminTokenRequest, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewAdminServiceClient(m.cli.Conn())
	return client.CleanToken(ctx, in, opts...)
}
