syntax = "v1"


type SkuStock {
	// @inject_tag: json:"id" db:"id"
	Id int64 `json:"id,optional"`
	// @inject_tag: json:"product_id" db:"product_id"
	ProductId int64 `json:"product_id,optional"`
	// @inject_tag: json:"sku_code" db:"sku_code"
	SkuCode string `json:"sku_code,optional"`
	// @inject_tag: json:"price" db:"price"
	Price float32 `json:"price,optional"`
	// @inject_tag: json:"stock" db:"stock"
	Stock int32 `json:"stock,optional"`
	// @inject_tag: json:"low_stock" db:"low_stock"
	LowStock int32 `json:"low_stock,optional"`
	// @inject_tag: json:"sp_data" db:"sp_data"
	SpData string `json:"sp_data,optional"`
	// @inject_tag: json:"pic" db:"pic"
	Pic string `json:"pic,optional"`
	// @inject_tag: json:"sale" db:"sale"
	Sale int32 `json:"sale,optional"`
    
	LockStock int32 `json:"lock_stock,optional"`
}


type SkuStockListResponse {
	Code   int32       `json:"code"`
	Data   []*SkuStock `json:"data"`
	Detail string      `json:"detail"`
}

type SkuStockRequest {
	//@inject_tag: form:"product_id"
	ProductId int64 `json:"product_id,optional"`
	//@inject_tag: form:"keyword"
	Keyword string `json:"keyword,optional"`
}


type SkuStockListRequest {
	List []*SkuStock `json:"list,optional"`
}


type EmptyRequest {
    
}