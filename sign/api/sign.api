syntax = "v1"


type Member struct {
	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,optional"`
	// @inject_tag: json:"username"
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	// @inject_tag: json:"password"
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
	// @inject_tag: json:"phone"
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone"`
	// @inject_tag: json:"email"
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email"`
	// @inject_tag: json:"avatar"
	Avatar string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar"`
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,7,opt,name=status,proto3" json:"status"`
	// @inject_tag: json:"add_time"
	AddTime int64 `protobuf:"varint,8,opt,name=add_time,json=addTime,proto3" json:"add_time"`
	// @inject_tag: json:"member_level"
	MemberLevel int64 `protobuf:"varint,9,opt,name=member_level,json=memberLevel,proto3" json:"member_level"`
	// @inject_tag: json:"gender"
	Gender int32 `protobuf:"varint,10,opt,name=gender,proto3" json:"gender"`
	// @inject_tag: json:"birthday"
	Birthday int32 `protobuf:"varint,11,opt,name=birthday,proto3" json:"birthday"`
	// @inject_tag: json:"token"  xorm:"-"
	Token string `protobuf:"bytes,12,opt,name=token,proto3" json:"token" xorm:"-"`
	// @inject_tag: json:"integral"
	Integral int32 `protobuf:"varint,13,opt,name=integral,proto3" json:"integral"`
	// @inject_tag: json:"coupon"
	Coupon int32 `protobuf:"varint,14,opt,name=coupon,proto3" json:"coupon"`
	// @inject_tag: json:"followers"
	Followers int32 `protobuf:"varint,15,opt,name=followers,proto3" json:"followers"`
	// @inject_tag: json:"nickname"
	Nickname string `protobuf:"bytes,16,opt,name=nickname,proto3" json:"nickname"`
}


type MemberData {
	// @inject_tag: json:"member"
	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member"`
	// @inject_tag: json:"member_level"
	MemberLevel *MemberLevel `protobuf:"bytes,2,opt,name=member_level,json=memberLevel,proto3" json:"member_level"`
}


type MemberResponse {
	// @inject_tag: json:"code"
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// @inject_tag: json:"data"
	Data *MemberData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
	// @inject_tag: json:"detail"
	Detail string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail"`
}

type MemberLoginRequest {
	// @inject_tag: json:"username"
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	// @inject_tag: json:"password"
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	// @inject_tag: json:"phone"
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone"`
	// @inject_tag: json:"email"
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email"`
}


type Response {
	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

@server(
	group: sign
)
service member-api {
	@handler Login
	post /login (MemberLoginRequest) returns (MemberResponse)
	
	@handler Register
	post /register (Member) returns (MemberResponse)
}