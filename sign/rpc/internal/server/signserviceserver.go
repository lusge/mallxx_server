// Code generated by goctl. DO NOT EDIT!
// Source: sign.proto

package server

import (
	"context"

	"mallxx_server/sign/rpc/internal/logic"
	"mallxx_server/sign/rpc/internal/svc"
	"mallxx_server/sign/rpc/pb"
)

type SignServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedSignServiceServer
}

func NewSignServiceServer(svcCtx *svc.ServiceContext) *SignServiceServer {
	return &SignServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *SignServiceServer) Login(ctx context.Context, in *pb.MemberLoginRequest) (*pb.MemberResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *SignServiceServer) Register(ctx context.Context, in *pb.Member) (*pb.MemberResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *SignServiceServer) VerifyToken(ctx context.Context, in *pb.SignTokenRequest) (*pb.Response, error) {
	l := logic.NewVerifyTokenLogic(ctx, s.svcCtx)
	return l.VerifyToken(in)
}

func (s *SignServiceServer) CleanToken(ctx context.Context, in *pb.SignTokenRequest) (*pb.Response, error) {
	l := logic.NewCleanTokenLogic(ctx, s.svcCtx)
	return l.CleanToken(in)
}
